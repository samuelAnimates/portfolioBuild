{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\samuelAnimatesReact\\\\client\\\\src\\\\pages\\\\TarotProject\\\\TarotProject.js\";\nimport React, { Component } from 'react';\nimport \"./TarotProject.css\";\nimport HomepageProjectLinksContainer from '../../components/HomepageProjectLinksContainer';\nimport SamePageNavBar from '../../components/SamePageNavBar';\nimport SamePageNavBarMobile from '../../components/SamePageNavBarMobile';\nimport ProjectPageMainSections from '../../components/ProjectPageMainSections';\nimport ProjectHeader from '../../components/ProjectHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TarotProject extends Component {\n  constructor() {\n    super(...arguments);\n    this.projectInfo = {\n      title: \"AR-Tarot\",\n      synopsis: {\n        mediaType: \"photo\",\n        blurb: \"A web app \",\n        embed: {\n          src: \"../assets/images/projectPhotos/tarot.gif\",\n          alt: \"An animated gif showcasing a tarot reading hovering above a placemarker in augmented reality.\"\n        },\n        year: \"2018\",\n        specs: [{\n          id: \"artarotSpecs01\",\n          lead: \"Composition\",\n          body: \"4 videos and 5 worksheets in simplified Chinese.\"\n        }]\n      },\n      highlights: [{\n        id: \"artarotHighlights02\",\n        lead: \"Lessons Learned\",\n        body: \"I learned a bit about using AR in a web project. I also thought more about accessibility of AR. Is a text alternative enough? Is there a better way to incorporate non-visual alternatives to common AR techniques?\"\n      }],\n      overview: [{\n        id: \"artarotOverview01\",\n        lead: \"Process\",\n        body: \"I started off this project with an idea to get a tarot reading in augmented reality. The most seamless way I found to do that in a web app was through A-frame and a Hiro marker. The process of picking a random card from a deck 3 times wzs pretty straightforward to program. I decided to leave the logic open to easily draw different numbers of cards and display different formations for different kinds of readings in the future. I then figured out how I wanted to display them in a simplistic Augmented reality reading, and a more detailed text alternative. The most tedious part was making a digital deck of cards with illustrations and semi-personalized interpretations so the card descriptions could make sense in wide array of topics.\"\n      }, {\n        id: \"artarotOverview02\",\n        lead: \"Web Accessibility (A11Y) Considerations\",\n        body: \"This app was designed with a 2D on-screen option for displaying tarot readings, suitable for those without access to a printed Hiro marker or those who rely on a screen reader. Illustration descriptions are readable by everyone as an interpretation aid, and linked to the images in an ARIA-compatible way.\"\n      }, {\n        id: \"artarotOverview03\",\n        lead: \"Next Steps\",\n        body: \"I think I may need to use local storage to take the user to a standalone URL for AR-readings. I ran into problems tryingto dynamically update the page contents with A-Frame. I would also like to add a second reading layout and fix some mobile layout issues.\"\n      }],\n      links: [{\n        \"isInternalLink\": false,\n        \"id\": \"web0102\",\n        \"text\": \"'AR-Tarot' GitHub Repo\",\n        \"icon\": \"code\",\n        \"path\": \"https://github.com/smendez92/AR-tarot\"\n      }, {\n        \"isInternalLink\": false,\n        \"id\": \"web0103\",\n        \"text\": \"'AR-Tarot' Demo on GitHub Pages\",\n        \"icon\": \"website\",\n        \"path\": \"https://smendez92.github.io/AR-tarot/index\"\n      }]\n    };\n    this.artarotNavbarLinks = [{\n      title: \"Synopsis\",\n      id: \"artarotNavBarLinkSynopsis\"\n    }, {\n      title: \"Highlights\",\n      id: \"artarotNavBarLinkHighlights\"\n    }, {\n      title: \"Overview\",\n      id: \"artarotNavBarLinkOverview\"\n    }];\n    this.artarotSynopsisSectionRef = /*#__PURE__*/React.createRef();\n    this.artarotHighlightsSectionRef = /*#__PURE__*/React.createRef();\n    this.artarotNavbarRef = /*#__PURE__*/React.createRef();\n    this.artarotOverviewSectionRef = /*#__PURE__*/React.createRef();\n    this.handleButtonClick = event => {\n      event.preventDefault();\n      if (event.target.attributes.getNamedItem(\"buttontype\").value === \"navbarLink\") {\n        this.handleNavLinkClick();\n      }\n      ;\n    };\n    this.handleNavLinkClick = event => {\n      if (event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkSynopsis\") {\n        this.artarotSynopsisSectionRef.current.scrollIntoView();\n        this.artarotSynopsisSectionRef.current.focus();\n      }\n      ;\n      if (event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkHighlights\") {\n        this.artarotHighlightsSectionRef.current.scrollIntoView();\n        this.artarotHighlightsSectionRef.current.focus();\n      }\n      ;\n      if (event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkOverview\") {\n        this.artarotOverviewSectionRef.current.scrollIntoView();\n        this.artarotOverviewSectionRef.current.focus();\n      }\n      ;\n    };\n  }\n  componentDidMount() {\n    document.title = \"AR-Tarot Project Page\";\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.colorSchemeNameRoot + this.props.colorSchemeSuffix,\n      children: [this.props.isMobileView === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-Overpass position-fixed left-0\",\n        children: /*#__PURE__*/_jsxDEV(SamePageNavBar, {\n          colorSchemeSuffix: this.props.colorSchemeSuffix,\n          handleNavLinkClick: this.handleNavLinkClick,\n          navbarLinks: this.artarotNavbarLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ProjectHeader, {\n        title: this.projectInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), this.props.isMobileView === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"padding-left-p5em padding-right-p5em\",\n        children: /*#__PURE__*/_jsxDEV(SamePageNavBarMobile, {\n          colorSchemeSuffix: this.props.colorSchemeSuffix,\n          handleNavLinkClick: this.handleNavLinkClick,\n          navbarLinks: this.artarotNavbarLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ProjectPageMainSections, {\n        colorSchemeSuffix: this.props.colorSchemeSuffix,\n        float: this.props.responsiveFloat,\n        isMobile: this.props.isMobileView,\n        width: this.props.responsiveWidth,\n        highlightsSectionRef: this.artarotHighlightsSectionRef,\n        projectInfo: this.projectInfo,\n        overviewSectionRef: this.artarotOverviewSectionRef,\n        synopsisSectionRef: this.artarotSynopsisSectionRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(HomepageProjectLinksContainer, {\n        links: this.projectInfo.links,\n        colorSchemeSuffix: this.props.colorSchemeSuffix,\n        materialIconFill: this.props.materialIconFill\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default TarotProject;","map":{"version":3,"names":["React","Component","HomepageProjectLinksContainer","SamePageNavBar","SamePageNavBarMobile","ProjectPageMainSections","ProjectHeader","jsxDEV","_jsxDEV","TarotProject","constructor","arguments","projectInfo","title","synopsis","mediaType","blurb","embed","src","alt","year","specs","id","lead","body","highlights","overview","links","artarotNavbarLinks","artarotSynopsisSectionRef","createRef","artarotHighlightsSectionRef","artarotNavbarRef","artarotOverviewSectionRef","handleButtonClick","event","preventDefault","target","attributes","getNamedItem","value","handleNavLinkClick","current","scrollIntoView","focus","componentDidMount","document","render","className","props","colorSchemeNameRoot","colorSchemeSuffix","children","isMobileView","navbarLinks","fileName","_jsxFileName","lineNumber","columnNumber","float","responsiveFloat","isMobile","width","responsiveWidth","highlightsSectionRef","overviewSectionRef","synopsisSectionRef","materialIconFill"],"sources":["C:/code/samuelAnimatesReact/client/src/pages/TarotProject/TarotProject.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport \"./TarotProject.css\";\r\nimport HomepageProjectLinksContainer from '../../components/HomepageProjectLinksContainer';\r\nimport SamePageNavBar from '../../components/SamePageNavBar';\r\nimport SamePageNavBarMobile from '../../components/SamePageNavBarMobile';\r\nimport ProjectPageMainSections from '../../components/ProjectPageMainSections';\r\nimport ProjectHeader from '../../components/ProjectHeader';\r\n\r\nclass TarotProject extends Component {\r\n\tprojectInfo = {\r\n\t\ttitle: \"AR-Tarot\",\r\n\t\tsynopsis:{\r\n\t\t\tmediaType: \"photo\",\r\n\t\t\tblurb: \"A web app \",\r\n\t\t\tembed: {\r\n\t\t\t\tsrc: \"../assets/images/projectPhotos/tarot.gif\",\r\n\t\t\t\talt: \"An animated gif showcasing a tarot reading hovering above a placemarker in augmented reality.\"\r\n\t\t\t},\r\n\t\t\tyear: \"2018\",\r\n\t\t\tspecs: [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"artarotSpecs01\",\r\n\t\t\t\t\tlead: \"Composition\",\r\n\t\t\t\t\tbody: \"4 videos and 5 worksheets in simplified Chinese.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\thighlights: [\r\n\t\t\t{\r\n\t\t\t\tid: \"artarotHighlights02\",\r\n\t\t\t\tlead: \"Lessons Learned\",\r\n\t\t\t\tbody: \"I learned a bit about using AR in a web project. I also thought more about accessibility of AR. Is a text alternative enough? Is there a better way to incorporate non-visual alternatives to common AR techniques?\"\r\n\t\t\t}\r\n\t\t],\r\n\t\toverview: [\r\n\t\t\t{\r\n\t\t\t\tid: \"artarotOverview01\",\r\n\t\t\t\tlead: \"Process\",\r\n\t\t\t\tbody: \"I started off this project with an idea to get a tarot reading in augmented reality. The most seamless way I found to do that in a web app was through A-frame and a Hiro marker. The process of picking a random card from a deck 3 times wzs pretty straightforward to program. I decided to leave the logic open to easily draw different numbers of cards and display different formations for different kinds of readings in the future. I then figured out how I wanted to display them in a simplistic Augmented reality reading, and a more detailed text alternative. The most tedious part was making a digital deck of cards with illustrations and semi-personalized interpretations so the card descriptions could make sense in wide array of topics.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: \"artarotOverview02\",\r\n\t\t\t\tlead: \"Web Accessibility (A11Y) Considerations\",\r\n\t\t\t\tbody: \"This app was designed with a 2D on-screen option for displaying tarot readings, suitable for those without access to a printed Hiro marker or those who rely on a screen reader. Illustration descriptions are readable by everyone as an interpretation aid, and linked to the images in an ARIA-compatible way.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: \"artarotOverview03\",\r\n\t\t\t\tlead: \"Next Steps\",\r\n\t\t\t\tbody: \"I think I may need to use local storage to take the user to a standalone URL for AR-readings. I ran into problems tryingto dynamically update the page contents with A-Frame. I would also like to add a second reading layout and fix some mobile layout issues.\"\r\n\t\t\t}\r\n\t\t],\r\n\t\tlinks: [\r\n\t\t\t{\r\n\t\t\t\t\"isInternalLink\": false,\r\n\t\t\t\t\"id\": \"web0102\",\r\n\t\t\t\t\"text\": \"'AR-Tarot' GitHub Repo\",\r\n\t\t\t\t\"icon\": \"code\",\r\n\t\t\t\t\"path\": \"https://github.com/smendez92/AR-tarot\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"isInternalLink\": false,\r\n\t\t\t\t\"id\": \"web0103\",\r\n\t\t\t\t\"text\": \"'AR-Tarot' Demo on GitHub Pages\",\r\n\t\t\t\t\"icon\": \"website\",\r\n\t\t\t\t\"path\": \"https://smendez92.github.io/AR-tarot/index\"\r\n\t\t\t}\r\n\t\t]\r\n\t\t\r\n\r\n\t\t\r\n\t}\r\n\r\n\tartarotNavbarLinks = [{title:\"Synopsis\", id:\"artarotNavBarLinkSynopsis\"},{title:\"Highlights\", id:\"artarotNavBarLinkHighlights\"},{title:\"Overview\", id:\"artarotNavBarLinkOverview\"}];\r\n\tartarotSynopsisSectionRef = React.createRef();\r\n\tartarotHighlightsSectionRef = React.createRef();\r\n\tartarotNavbarRef = React.createRef();\r\n\tartarotOverviewSectionRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = \"AR-Tarot Project Page\";\r\n\t};\r\n\t\r\n\thandleButtonClick = event => {\r\n\t\tevent.preventDefault();\r\n\t\tif(event.target.attributes.getNamedItem(\"buttontype\").value === \"navbarLink\"){\r\n\t\t\tthis.handleNavLinkClick();\r\n\t\t};\r\n\t}\r\n\thandleNavLinkClick = event => {\r\n\t\tif(event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkSynopsis\"){\r\n\t\t\tthis.artarotSynopsisSectionRef.current.scrollIntoView();\r\n\t\t\tthis.artarotSynopsisSectionRef.current.focus();\r\n\t\t};\r\n\t\tif(event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkHighlights\"){\r\n\t\t\tthis.artarotHighlightsSectionRef.current.scrollIntoView();\r\n\t\t\tthis.artarotHighlightsSectionRef.current.focus();\r\n\t\t};\r\n\t\tif(event.target.attributes.getNamedItem(\"buttonId\").value === \"artarotNavBarLinkOverview\"){\r\n\t\t\tthis.artarotOverviewSectionRef.current.scrollIntoView();\r\n\t\t\tthis.artarotOverviewSectionRef.current.focus();\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={ this.props.colorSchemeNameRoot + this.props.colorSchemeSuffix }>\r\n\t\t\t\t{ this.props.isMobileView === false &&\r\n\t\t\t\t\t<div className=\"font-Overpass position-fixed left-0\">\r\n\t\t\t\t\t\t<SamePageNavBar\r\n\t\t\t\t\t\t\tcolorSchemeSuffix={ this.props.colorSchemeSuffix }\r\n\t\t\t\t\t\t\thandleNavLinkClick={ this.handleNavLinkClick }\r\n\t\t\t\t\t\t\tnavbarLinks={ this.artarotNavbarLinks }\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<ProjectHeader title={ this.projectInfo.title } />\r\n\t\t\t\t{ this.props.isMobileView === true &&\r\n\t\t\t\t\t<div className=\"padding-left-p5em padding-right-p5em\">\r\n\t\t\t\t\t\t<SamePageNavBarMobile\r\n\t\t\t\t\t\t\tcolorSchemeSuffix={ this.props.colorSchemeSuffix }\r\n\t\t\t\t\t\t\thandleNavLinkClick={ this.handleNavLinkClick }\r\n\t\t\t\t\t\t\tnavbarLinks={ this.artarotNavbarLinks }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<ProjectPageMainSections\r\n\t\t\t\t\tcolorSchemeSuffix={ this.props.colorSchemeSuffix }\r\n\t\t\t\t\tfloat={ this.props.responsiveFloat }\r\n\t\t\t\t\tisMobile={ this.props.isMobileView }\r\n\t\t\t\t\twidth={ this.props.responsiveWidth }\r\n\t\t\t\t\thighlightsSectionRef={ this.artarotHighlightsSectionRef }\r\n\t\t\t\t\tprojectInfo={ this.projectInfo }\r\n\t\t\t\t\toverviewSectionRef={ this.artarotOverviewSectionRef }\r\n\t\t\t\t\tsynopsisSectionRef={ this.artarotSynopsisSectionRef }\r\n\t\t\t\t/>\r\n\t\t\t\t<HomepageProjectLinksContainer\r\n\t\t\t\t\tlinks={ this.projectInfo.links }\r\n\t\t\t\t\tcolorSchemeSuffix={ this.props.colorSchemeSuffix }\r\n\t\t\t\t\tmaterialIconFill={ this.props.materialIconFill }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n  \t}\r\n}\r\n\r\nexport default TarotProject;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}